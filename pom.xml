<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.brightspeed</groupId>
	<artifactId>productms</artifactId>
	<version>1.0.0</version>	
	<properties>
		 <mvn.compiler.plugin.version>3.8.0</mvn.compiler.plugin.version>
		 <java.version>1.8</java.version>
		 <swagger.version>1.6.5</swagger.version>
		 <swagger-maven-plugin.version>3.1.8</swagger-maven-plugin.version>
		 <maven.jar.plugin.version>3.1.1</maven.jar.plugin.version>
		 <swagger-resource-package>com.brightspeed.resource</swagger-resource-package>
		 <swagger-directory>${basedir}/target/classes/static/v1</swagger-directory>
		 <jacoco.path>${basedir}/target/jacoco_report</jacoco.path>
		 <jacoco.itPath>${basedir}/target/jacoco_itReport</jacoco.itPath>
		 <docker.maven.plugin.version>1.2.0</docker.maven.plugin.version>
		 <docker.image.name>productms</docker.image.name>
		 <docker.image.tag>latest</docker.image.tag>
		 <rest.assured.version>4.4.0</rest.assured.version>
		 <spring-boot.version>2.6.4</spring-boot.version>
		 <spring-boot-maven-plugin-version>2.6.4</spring-boot-maven-plugin-version>
		 <maven-failsafe-plugin-version>2.18.1</maven-failsafe-plugin-version>
		 <jacoco-plugin-version>0.8.2</jacoco-plugin-version>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>			
		</dependency>
		
		<dependency>
	        <groupId>org.apache.commons</groupId>
	        <artifactId>commons-lang3</artifactId>	        
      	</dependency>
      	<dependency>
  			<groupId>io.swagger</groupId>
  			<artifactId>swagger-jersey2-jaxrs</artifactId>
  			<version>${swagger.version}</version>  			
		</dependency>
		<dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>rest-assured</artifactId>		  
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>json-path</artifactId>		   
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>xml-path</artifactId>		   
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>json-schema-validator</artifactId>		   
		    <scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mvn.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
                <executions>
                	<execution>
                		<phase>compile</phase>
                	</execution>
                </executions>
            </plugin>			
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin-version}</version>
				<configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**static/swagger/*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-maven-plugin-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>				
			</plugin>
			<plugin>
				<groupId>com.github.kongchen</groupId>
				<artifactId>swagger-maven-plugin</artifactId>
				<version>${swagger-maven-plugin.version}</version>
				<configuration>
					<apiSources>
						<apiSource>
							<springmvc>false</springmvc>
							<locations>${swagger-resource-package}</locations>
							<schemes>http,https</schemes>
							<basePath>/api/productms</basePath>
							<info>
								<title>API documentation.</title>
								<version>v1</version>
								<description>Rest API Documentation</description>								
							</info>
							<outputFormats>json</outputFormats>
							<swaggerDirectory>${swagger-directory}</swaggerDirectory>
						</apiSource>						
					</apiSources>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>				
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
			  	<artifactId>jacoco-maven-plugin</artifactId>
			  	<version>${jacoco-plugin-version}</version>
			  	<executions>
			        <execution>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			        </execution>
			        <execution>
			            <id>report</id>
			            <phase>prepare-package</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
							<outputDirectory>${jacoco.path}</outputDirectory>
						</configuration>
        			</execution>
    			</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<configuration>
					<imageName>${docker.image.name}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<imageTags>
						<imageTag>${docker.image.tag}</imageTag>
					</imageTags>
					<forceTags>true</forceTags>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>opt/etc/config/*</include>
							<includes>**/*</includes>
						</resource>						
					</resources>
				</configuration>
				
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>opt/etc/config</directory>
				<targetPath>../opt/etc/config</targetPath>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/docker</directory>
				<targetPath>../docker</targetPath>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
	</build>
</project>
